/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/gZwlHDlVBTK
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Comfortaa } from 'next/font/google'
import { Syne } from 'next/font/google'

comfortaa({
  subsets: ['latin'],
  display: 'swap',
})

syne({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
// import { Input } from "@/components/ui/input"
import { JSX, SVGProps } from "react"
import { GeneratedImage } from "@/app/page"

type Props = {
  image: GeneratedImage;
  userPrompt: string;
  reset: () => void;
  onSubmit: () => void;
};

export function AnotherFinal({ image, userPrompt, reset, onSubmit }: Props) {
  const handleSubmit = () => {
    onSubmit();
  };
  return (
    <div className="flex flex-col h-screen">
      <div className="relative overflow-hidden max-w-6xl mx-auto">
        <img
          src={image.generatedImage}
          alt="AI-Generated Dress"
          className="w-full h-auto"
        />
        <div className="absolute top-4 right-4 flex items-center gap-2">
          <Button
            variant="secondary"
            size="lg"
            className="bg-[#f5f5f5]/80 hover:bg-[#f5f5f5]/90 text-[#4169e1]"
            onClick={handleSubmit}
          >
            <BarcodeIcon className="w-6 h-6" />
            Try it On!
          </Button>
        </div>
      </div>
      <div className="bg-[#4169e1] px-4 py-6 sm:px-6 md:px-8 lg:px-10 flex flex-col items-center gap-4 text-[#f5f5f5] mt-auto">

        <h1 className="text-3xl font-bold">Behold! Your Dream Dress Awaits</h1>
        <p className="text-[#b0c4de]">{userPrompt}</p>

        <Button
          className="bg-gray-300 px-6 py-2 rounded-md hover:bg-[#4169e1] focus:bg-[#4169e1] text-[#f5f5f5] hover:text-white"
          onClick={reset}
        >
          Reset Prompt
        </Button>
      </div>
    </div>
  )
}

function BarcodeIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 5v14" />
      <path d="M8 5v14" />
      <path d="M12 5v14" />
      <path d="M17 5v14" />
      <path d="M21 5v14" />
    </svg>
  )
}


function XIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  )
}

// const [showModal, setShowModal] = useState(false)
// const [shareLink, setShareLink] = useState("")
// const handleSaveImage = () => {
//   console.log("Saving image...")
// }
// const handleShare = () => {
//   const link = `https://example.com/dress/${Math.random().toString(36).substring(2, 8)}`
//   setShareLink(link)
//   setShowModal(true)
// }
// const handleCloseModal = () => {
//   setShowModal(false)
// }
{/* {showModal && (
    <div>
    <div className="bg-[#f5f5f5] p-6 rounded-lg shadow-lg">
    <h2 className="text-2xl font-bold mb-4 text-[#4169e1]">Share this dress</h2>
    <div className="flex items-center gap-4">
          <Input value={shareLink} readOnly className="bg-[#b0c4de]/20 border-[#b0c4de]" />
          <Button
          size="sm"
          onClick={() => {
              navigator.clipboard.writeText(shareLink)
              alert("Link copied to clipboard!")
            }}
            className="bg-[#4169e1] text-[#f5f5f5] hover:bg-[#4169d1]"
            >
            Copy Link
            </Button>
            </div>
            </div>
            </div>
            )} */}